import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from xgboost import XGBClassifier
from lightgbm import LGBMClassifier
import warnings
warnings.filterwarnings('ignore')

# 讀取訓練集和測試集
X_train = pd.read_csv('X_train.csv')
X_test = pd.read_csv('X_test.csv')
y_train = pd.read_csv('y_train.csv')['country_destination']
y_test = y_train[:len(X_test)]

# 定義五個分類模型
lr = LogisticRegression()
dt = DecisionTreeClassifier()
rf = RandomForestClassifier()


# 訓練五個分類模型並進行預測
lr.fit(X_train, y_train)
lr_pred = lr.predict(X_test)

dt.fit(X_train, y_train)
dt_pred = dt.predict(X_test)

rf.fit(X_train, y_train)
rf_pred = rf.predict(X_test)


# 將預測結果保存為 DataFrame 對象
results = pd.DataFrame({
    'Logistic Regression': lr_pred,
    'Decision Tree': dt_pred,
    'Random Forest': rf_pred,
})

# 顯示預測結果
#print(results)

print("----------------模型評估--------------")

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix

# 計算五個分類模型的評估指標
models = [lr, dt, rf]
model_names = ['Logistic Regression', 'Decision Tree', 'Random Forest']
accuracy_scores = []
precision_scores = []
recall_scores = []
f1_scores = []
confusion_matrices = []

for model, model_name in zip(models, model_names):
    y_pred = model.predict(X_train)
    accuracy_scores.append(accuracy_score(y_train, y_pred))
    precision_scores.append(precision_score(y_train, y_pred, average='weighted'))
    recall_scores.append(recall_score(y_train, y_pred, average='weighted'))
    f1_scores.append(f1_score(y_train, y_pred, average='weighted'))
    confusion_matrices.append(confusion_matrix(y_train, y_pred))

# 將評估結果保存為 DataFrame 對象
evaluation_results = pd.DataFrame({
    'Model': model_names,
    'Accuracy': accuracy_scores,
    'Precision': precision_scores,
    'Recall': recall_scores,
    'F1-score': f1_scores,
})

print(evaluation_results)

print("----------------使用y_test 模型評估--------------")


from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix

# 計算五個分類模型的評估指標
models = [lr, dt, rf]
model_names = ['Logistic Regression', 'Decision Tree', 'Random Forest']
accuracy_scores = []
precision_scores = []
recall_scores = []
f1_scores = []
confusion_matrices = []

for model, model_name in zip(models, model_names):
    y_pred = model.predict(X_test)
    accuracy_scores.append(accuracy_score(y_test, y_pred))
    precision_scores.append(precision_score(y_test, y_pred, average='weighted'))
    recall_scores.append(recall_score(y_test, y_pred, average='weighted'))
    f1_scores.append(f1_score(y_test, y_pred, average='weighted'))
    confusion_matrices.append(confusion_matrix(y_test, y_pred))

# 將評估結果保存為 DataFrame 對象
evaluation_results = pd.DataFrame({
    'Model': model_names,
    'Accuracy': accuracy_scores,
    'Precision': precision_scores,
    'Recall': recall_scores,
    'F1-score': f1_scores,
})

print(evaluation_results)